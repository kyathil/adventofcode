//Dirty solution to adventofcode 2b 2016 check http://adventofcode.com/2016/day/2 for problem description

var inp = 'RLRLLLULULULUUDUULULRDDLURURDDLDUUDDLRDDUUUDDRUDLRRDDUDUUDULUDRDULRUDRULRDRUDLDDULRRDLDRLUDDLLDRDDDUDDLUDUDULDRLLDRLULRLURDLULRUUUDRULLUUDLRDLDDUDRRRLDLRUUURRLDDRRRURLLULDUULLDRLRDLLDURDLDDULLDDLDLUURRRURLRURLLRRDURLDUDDLULUUULULLLDRRRRRLULRDUDURURLULRURRRLLUURDURULRRUULDRDLULDLLUDLUDRLUDLRRLDLLDLDUDDLULLDRULRLRULDURRDLDLLUDRLLDRRDLDUDUURUURDUUDDDLDLDDRDLUDLDUUUUDLDRLRURDLURURDLLLUURURDRDLUDLLRUDULLLDLULLULLDLDDRDRRRUDDDUDDDDRULLLLRLDDLLRDRLLLRRLDRRUDRUUURLLLRULRRDURDLDRLDDUUDUUURRLRRUDLDLDDRUDLULLUUDUUUDLUDDRUULLLURUDDDDLRUDDLLLRUR\n' +
'LDLRLDDDLUDRDRRUDUURLRULLUDDRLURLUULDLLRLLUDLRLRUDLULRLRRLRURLDDDURUDUUURDRLDDLUUUDRUDUDDDLLURLLULRUULLUDRULUDDULDUDUDULLDRUUUULRDUUDLUDURDLLRLLRLUUDUUDRLLLRULUURUDLDRLLDUDLDDRULDULDURRLDDDUDUDDRUDUDRDURLLLLLULDRDDLLUDULLLUDRURLDLDLDULLDDRURRLUDDRLURLULRLDDDUUUURLRDLRURDDURLDLRRLLRLRLUURRLLDDLDRLRDUDDLLDDDURUUDURLRRDUULRRDDRRUULDRLRUDRRLDDRLDRULLDLDURRULDURRRDLRRLRLLLRLDRLLULRRLLLLLDLDDULDLLDLLDUUDDRLURUUUUULRDDLRDLRDRDRDLUDDLDDRULLUDDRLDLLUDRLUURRLUDURURLLRURRURRLRLLRLURURDDDDRRLURDUULLUU\n' +
'LLRRDURRDLDULRDUDLRDRDRURULDURUDRRURDDDRLDLDRDRDRDRULDUURLULDDUURUULUDULLDUDLLLLDLLLDRLUUULLULDDRRUDDULLLULRDRULDDULDUDRDDLUUURULDLLUDUUUUURUDLLDRDULLRULLDURDRLLDLDRDDURUULUDURRRUULLDUUDDURDURLDLRRLLDURDDLRRRUDLRRRDLDRLUDLUDRDRLDDLLLRLLRURDLRDUUUURRLULDDLDLLLUDRDRLRRDURDDLURDLDDDULLLRRLDDDRULDDDLRRDULUUUDRRULDDLLLURDRRLLLUULDRRRUURRDDLULDRLULDDDLDULDRRRULRULLURLURULLLLRUDRRRDRDRDLDULURLRRRRLRUDDRRRUURUURLLRURURUURRURRDLDLLUDRRRDUDDRDURLLRLRRULD\n' +
'DULRRDRLRLUDLLURURLLRLRDLLDLLDRDUURLRUUUDLLDUUDDUULDUULLRUDRURLUDRDLRUDDDLULUDLLDRULULLLDRRULDLLUURLRRRLDRDLDRURRRRDLRUUDULLRLLLDLRUDLDUUDRLDLRDRLRDLDDDUDLRUDLDDLLLDRLLRRUUDRDDUUURURRRUUDLRRDDRUDLDDULULDLRRLRDDUDRUURRUULURLURUDRRURRRULDDDDURDLUUULUULULRDLRRRRRURURRLRUULDUUURRDRRDLDUUUULLULLLLUDLUUDUURRDLDLRRRLUUURULDULDLDRLLURDRUULLLLLULLLDRURURRUDRRRRUDUDUDRUDUDRDRULUUDRURDDUUDLDLDUURUDURLRLRRDRDRDLLDUDDULLRDLDDRLLDLRDURDDULLLDLLLULDLUUUDLDRDLURUURDDLRDLLLLLRLURDLLLULLRRLU\n' +
'DUULULUUDUDLLRLRURULLDLRRLURDLLDUDUDDRURRLUDULULDRRDRLUULUDDLUURURDLDDDRDRUDURLDDLUDUURULRRUUDRLURRLRLDURRRULRLDDDRUDDDDDUDDULLLRRLLDULDRULUDLRRDLLUDRDLDULRLLLUULLRULRLLLLUDDRRDRLULDLDLURDDRUDDLDLDLDRULDLLDDUUDULUULULLURDURRLLUDRULLRDUDRDRURDRDRDURUUDULDDRURUDLLUUDUUDURDLRDRURUDRUURLUUURLRLUDRUDRUURLLUDRLURDDURRUDRDRLRRLDDDRDDLUUUDDLULDUURUDUDLLDRURDURRDULRLURRDLDDRLUDRLDLRLDDUURRULDDLDUDDLRDULLDDDLDUUUUDLRUDUDLDRDLRDDLDLRLLUDDRRLUDLDUUULLDDRLRRDLRRRRUDDLRLLULRLRDURDUDDRRULLDDLDLRRDLLULDURURDDURLRLULULURRUDUDRDLURULDUDLUULDUUURLLRUDLLRDLRUDRLULDUDRRDUUDUUULUUUDDRUD';
var tst = 'ULL\n'+ 
'RRDDD\n'+
'LURDL\n'+
'UUUUD';

var up = false;
var left = false;
var right = false;
var down = false;
var startPos = 5;
var path = [];

var input = inp.split('\n');
var test = tst.split('\n');
var k;

for(k=0;k<input.length;k++){
	getNumbersRow(input[k],startPos);
	path.push(startPos.toString());
	//console.log(startPos);
	
}

console.log(path);

function getNumbersRow(list, pos){
	var i;
	var curPos = pos; 

	for(i=0;i<list.length;i++){
	
		if(curPos === 1){

			if(list[i] === 'D'){
				curPos = 3;
			}

		}else if(curPos === 2){

			if(list[i] === 'R'){
				curPos = 3;
			}else if(list[i] === 'D'){
				curPos = 6;
			}else{

			}


		}else if(curPos === 3){

			if(list[i] === 'U'){
				curPos = 1;
			}else if(list[i] === 'D'){
				curPos = 7;
			}else if(list[i] === 'R'){
				curPos = 4;
			}else{
				curPos = 2;
			}
			
		}else if(curPos === 4){

			if(list[i] === 'D'){
				curPos = 8;
			}else if(list[i] === 'L'){
				curPos = 3;
			}else{

			}
		}else if(curPos === 5){

			if(list[i] === 'R'){
				curPos = 6;
			}else{
				
			}
			
		}else if(curPos === 6){

			if(list[i] === 'U'){
				curPos = 2;
			}else if(list[i] === 'D'){
				curPos = 'A';
			}else if(list[i] === 'R'){
				curPos = 7;
			}else{
				curPos = 5;
			}
			
		}else if(curPos === 7){

			if(list[i] === 'U'){
				curPos = 3;
			}else if(list[i] === 'D'){
				curPos = 'B';
			}else if(list[i] === 'R'){
				curPos = 8;
			}else{
				curPos = 6;
			}
			
		}else if(curPos === 8){

			if(list[i] === 'U'){
				curPos = 4;
			}else if(list[i] === 'D'){
				curPos = 'C';
			}else if(list[i] === 'R'){
				curPos = 9;
			}else{
				curPos =7;
			}
			
		}else if(curPos === 9){

			if(list[i] === 'L'){
				curPos = 8;
			}else{
				
			}
			
		}else if(curPos === 'A'){

			if(list[i] === 'U'){
				curPos = 6;
			}else if(list[i] === 'R'){
				curPos = 'B';
			}else{

			}
			
		}else if(curPos === 'B'){

			if(list[i] === 'U'){
				curPos = 7;
			}else if(list[i] === 'D'){
				curPos = 'D';
			}else if(list[i] === 'R'){
				curPos = 'C';
			}else{
				curPos = 'A';
			}
			
		}else if(curPos === 'C'){

			if(list[i] === 'U'){
				curPos = 8;
			}else if(list[i] === 'L'){
				curPos = 'B';
			}else{

			}
			
		}else{
			
			if(list[i] === 'U'){
				curPos = 'B';
			}else{
				
			}
		}
		startPos=curPos;


	}


}


